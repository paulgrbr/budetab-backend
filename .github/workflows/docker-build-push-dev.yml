name: Test, Build, Push (Dev)

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      POSTGRES_AUTH_USER: ${{ secrets.POSTGRES_AUTH_USER }}
      POSTGRES_AUTH_PW: ${{ secrets.POSTGRES_AUTH_PW }}
      POSTGRES_PUBLIC_USER: ${{ secrets.POSTGRES_PUBLIC_USER }}
      POSTGRES_PUBLIC_PW: ${{ secrets.POSTGRES_PUBLIC_PW }}
      POSTGRES_DB_NAME: ${{ vars.POSTGRES_DB_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      DEBUG_MODE: "true"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install PostgreSQL Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev gcc python3-dev build-essential

      - name: Set up Python Environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-binary psycopg2 -r requirements.txt

      - name: Run Tests
        run: pytest -s

  build:
    needs: test # Sicherstellen, dass Tests erfolgreich abgeschlossen sind, bevor Build startet
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.REGISTRY_URL }}/budetab-backend-dev:latest
          platforms: linux/amd64,linux/arm64
